# This pipeline runs for every new tag. It will pull the docker container for
# the commit hash of the tag, and will publish it as `:<tag-name>` and `latest`.
name: Release Bot

on:
  push:
    tags:
      - '@nordeck/matrix-meetings-bot@*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DOCKER_IMAGE: ghcr.io/nordeck/matrix-meetings-bot
    steps:
      - name: Generate Docker metadata of the existing image
        id: meta-existing-tag
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,prefix=

      - name: Generate Docker metadata of the new image
        id: meta-new-tags
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          labels: |
            org.opencontainers.image.title=Matrix Meetings Bot
            org.opencontainers.image.description=A Bot creating rooms / meetings triggered by custom events from the Matrix Meetings Widget UI
            org.opencontainers.image.vendor=Nordeck IT + Consulting GmbH
          tags: |
            type=match,pattern=@nordeck/matrix-meetings-bot@(.*),group=1

      - name: Generate Dockerfile
        env:
          SOURCE_IMAGE: ${{ fromJSON(steps.meta-existing-tag.outputs.json).tags[0] }}
        run: |
          echo "FROM $SOURCE_IMAGE" > Dockerfile

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: ${{ steps.meta-new-tags.outputs.tags }}
          labels: ${{ steps.meta-new-tags.outputs.labels }}
          # TODO: reenable s390x builds once the matrix-rust-sdk supports it
          platforms: linux/amd64,linux/arm64
          #platforms: linux/amd64,linux/arm64,linux/s390x
